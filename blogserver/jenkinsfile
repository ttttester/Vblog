//git凭证ID
def git_auth = "54be664a-d6e4-42bb-98e3-920b999c35aa"
//git的url地址
def git_url = "git@192.168.132.10:root/vblog.git"
//镜像的版本号
def tag = "latest"
//Harbor的url地址
def harbor_url = "192.168.132.12:85"
//镜像库项目名称
def harbor_project = "vblog"
//Harbor的登录凭证ID
def harbor_auth = "92da4da1-8364-4388-aa22-9b3fa5b775d9"
def currentProjectName = "blogserver"

node('master') {
   stage('pull code') {
      checkout([$class: 'GitSCM', branches: [[name: "*/${branch}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: "${git_auth}", url: "${git_url}"]]])
   }
//   stage('sonar scan') {
// 		//定义当前Jenkins的SonarQubeScanner工具
// 		def scannerHome = tool 'SonarQube-scanner'
// 		//引用当前JenkinsSonarQube环境
// 		withSonarQubeEnv('SonarQube9.3') {
// 			 sh """
// 					 cd ${currentProjectName}
// 					 ${scannerHome}/bin/sonar-scanner
// 			 """
// 		}
//   }
   stage('build project, push image to harbor') {
		 sh "cd ${currentProjectName} && mvn clean package dockerfile:build"
		 //定义镜像名称
		 def imageName = "${currentProjectName}:${tag}"
		 //对镜像打上标签
		 sh "docker tag ${imageName} ${harbor_url}/${harbor_project}/${imageName}"
		//把镜像推送到Harbor
		withCredentials([usernamePassword(credentialsId: "${harbor_auth}", passwordVariable: 'password', usernameVariable: 'username')]) {
			//登录到Harbor
			sh "docker login -u ${username} -p ${password} ${harbor_url}"
			//镜像上传
			sh "docker push ${harbor_url}/${harbor_project}/${imageName}"
			sh "echo 镜像上传成功"
		}
        // echo "启动容器"
    }
    
    // stage('启动容器') {
    //     sh "docker run --name vblog -p 8082:8081 -d 192.168.132.12:85/vblog/blogserver:latest"
    // }
    
    // stage('启动deploy') {
    //     sh "kubectl create ns vblog"
    //     sh "cd blogserver && kubectl apply -f vblog_deploy.yaml -f vblog"
    //     sh "cd blogserver && kubectl apply -f vblog_svc.yaml -f vblog"
    // }
}

// node('132.10') {
//   def remote = [:]
//   remote.name = 'master'
//   remote.host = '192.168.132.11'
//   remote.user = 'root'
//   remote.password = 'ZjLKdKG!tDV659gq'
//   remote.allowAnyHosts = true
//   stage('Remote SSH') {
//     // sshGet remote: remote, from: '/var/lib/jenkins/$JOB_NAME/k8s/', into: '.', override: true
//     // sshScript remote: remote, script: "abc.sh"
//   }
// }

node('132.10') {
    sh 'echo hello'
    stage('pull code') {
      checkout([$class: 'GitSCM', branches: [[name: "*/${branch}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: "${git_auth}", url: "${git_url}"]]])
    }
    stage('apply yaml') {
        sh "pwd"
        sh 'cd blogserver/k8s'
        // sh 'pwd'
        // sh 'kubectl delete ns vblog'
        // sh "kubectl create ns vblog"
        sh "cd blogserver/k8s && kubectl apply -f vblog_ns.yaml"
        sh 'kubectl create secret docker-registry vblog -n vblog1 --docker-server=192.168.132.12:85 --docker-username=test --docker-password=Test123456'
        sh "cd blogserver/k8s && kubectl apply -f vblog_deploy.yaml -n vblog1"
        sh "cd blogserver/k8s && kubectl apply -f vblog_svc.yaml -n vblog1"
    }
    
}

